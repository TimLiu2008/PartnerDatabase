/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.fbla;
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import javax.swing.RowFilter;
/**
 *
 * @author Tim
 */
public class Search extends javax.swing.JFrame {
    

    /**
     * Creates new form Search
     */
    public Search() {
        initComponents();
        //Sort function
        DefaultTableModel model = (DefaultTableModel)partnerTable.getModel();
                TableRowSorter sorter = new TableRowSorter(model);
                partnerTable.setRowSorter(sorter);
        ActionPanelEvent event = new ActionPanelEvent(){
            @Override
            //Remove button function
            public void onRemove(int row){
                if(partnerTable.isEditing()){
                    partnerTable.getCellEditor().stopCellEditing();
                }
                DefaultTableModel model = (DefaultTableModel)partnerTable.getModel();
                model.removeRow(row);
            }
        };
        //Renders out the remove button
        partnerTable.getColumnModel().getColumn(6).setCellRenderer(new ActionPanelCellRender());
        partnerTable.getColumnModel().getColumn(6).setCellEditor(new ActionPanelCellEditor(event));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        searchFilterTextField = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        partnerTable = new javax.swing.JTable();
        searchBackBtn = new javax.swing.JButton();
        searchSearchBtn = new javax.swing.JButton();
        searchRefreshBtn = new javax.swing.JButton();
        searchClearBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        searchFilterTextField.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        searchFilterTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchFilterTextFieldActionPerformed(evt);
            }
        });

        partnerTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Type", "Location", "Resources", "Contact", "Description", "Action"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        partnerTable.setRowHeight(40);
        jScrollPane1.setViewportView(partnerTable);

        searchBackBtn.setText("Back");
        searchBackBtn.setActionCommand("");
        searchBackBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBackBtnActionPerformed(evt);
            }
        });

        searchSearchBtn.setText("Search");
        searchSearchBtn.setActionCommand("");
        searchSearchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchSearchBtnActionPerformed(evt);
            }
        });

        searchRefreshBtn.setText("Refresh");
        searchRefreshBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchRefreshBtnActionPerformed(evt);
            }
        });

        searchClearBtn.setText("Clear");
        searchClearBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchClearBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(searchFilterTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 335, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(searchSearchBtn)
                        .addGap(18, 18, 18)
                        .addComponent(searchRefreshBtn)
                        .addGap(18, 18, 18)
                        .addComponent(searchClearBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 523, Short.MAX_VALUE)
                        .addComponent(searchBackBtn))
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchFilterTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchBackBtn)
                    .addComponent(searchSearchBtn)
                    .addComponent(searchRefreshBtn)
                    .addComponent(searchClearBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 740, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(8, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void searchBackBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBackBtnActionPerformed
        // TODO add your handling code here:
        //Closes the window
        dispose();
    }//GEN-LAST:event_searchBackBtnActionPerformed

    private void searchFilterTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchFilterTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchFilterTextFieldActionPerformed

    private void searchSearchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchSearchBtnActionPerformed
        // TODO add your handling code here:
        //Takes the text from the text field to search for partners
        DefaultTableModel model = (DefaultTableModel)partnerTable.getModel();
        TableRowSorter<DefaultTableModel> sorter = new TableRowSorter<>(model);
        partnerTable.setRowSorter(sorter);
        sorter.setRowFilter(RowFilter.regexFilter(searchFilterTextField.getText()));
    }//GEN-LAST:event_searchSearchBtnActionPerformed

    private void searchRefreshBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchRefreshBtnActionPerformed
        // TODO add your handling code here:
        //Refreshes the table by reading the text file again and inputting each partner
        DefaultTableModel model = (DefaultTableModel)partnerTable.getModel();
        model.setRowCount(0);
        try{
            BufferedReader br = new BufferedReader(new FileReader("list.txt"));
            Object[] tableLines = br.lines().toArray();
            for(int i = 0; i < tableLines.length; i++){
                String line = tableLines[i].toString().trim();
                String[] dataRow = line.split("/");
                model.addRow(dataRow);
            }
        }
        catch(IOException e){
            e.printStackTrace();
        }
    }//GEN-LAST:event_searchRefreshBtnActionPerformed

    private void searchClearBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchClearBtnActionPerformed
        // TODO add your handling code here:
        //Clears the table and file by setting the rows of the table to zero and deleting the contents of the text file
        DefaultTableModel model = (DefaultTableModel)partnerTable.getModel();
        model.setRowCount(0);
        try{
        FileWriter myWriter = new FileWriter("list.txt");
        myWriter.close();
        }
        catch(IOException e){
            e.printStackTrace();
        }
    }//GEN-LAST:event_searchClearBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Search.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Search.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Search.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Search.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Search().setVisible(true);
            }
        });
      
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private static javax.swing.JTable partnerTable;
    private javax.swing.JButton searchBackBtn;
    private javax.swing.JButton searchClearBtn;
    private javax.swing.JTextField searchFilterTextField;
    private javax.swing.JButton searchRefreshBtn;
    private javax.swing.JButton searchSearchBtn;
    // End of variables declaration//GEN-END:variables
}
